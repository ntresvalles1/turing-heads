From d292004007c1cabf3a7f1f482eee1a7700cea9ee Mon Sep 17 00:00:00 2001
From: Alex Kirk <akirk@users.noreply.github.com>
Date: Wed, 23 Jun 2021 17:20:20 +0200
Subject: [PATCH 1/2] First pass at WXZ importer
Source: https://github.com/WordPress/wordpress-importer/compare/master...akirk:wordpress-importer:import-wxz.patch

---
 src/class-wp-import.php          |   7 +-
 src/parsers/class-wxz-parser.php | 122 +++++++++++++++++++++++++++++++
 src/wordpress-importer.php       |   3 +
 3 files changed, 131 insertions(+), 1 deletion(-)
 create mode 100644 src/parsers/class-wxz-parser.php

diff --git a/src/class-wp-import.php b/src/class-wp-import.php
index c475955..22097b4 100644
--- a/src/class-wp-import.php
+++ b/src/class-wp-import.php
@@ -1298,7 +1298,12 @@ function remap_featured_images() {
 	 * @return array Information gathered from the WXR file
 	 */
 	function parse( $file ) {
-		$parser = new WXR_Parser();
+		if ( 'wxz' === strtolower( pathinfo( $file, PATHINFO_EXTENSION ) ) || str_ends_with( strtolower( $file ), '.wxz_.txt' ) || str_ends_with( strtolower( $file ), '.wxz.txt' ) ) {
+			$parser = new WXZ_Parser();
+		} else {
+			// Legacy WXR parser
+			$parser = new WXR_Parser();
+		}
 		return $parser->parse( $file );
 	}
 
diff --git a/src/parsers/class-wxz-parser.php b/src/parsers/class-wxz-parser.php
new file mode 100644
index 0000000..1120e12
--- /dev/null
+++ b/src/parsers/class-wxz-parser.php
@@ -0,0 +1,122 @@
+<?php
+
+class WXZ_Parser {
+	function parse( $file ) {
+		require_once ABSPATH . '/wp-admin/includes/class-pclzip.php';
+
+		$base_url      = false;
+		$base_blog_url = false;
+		$authors       = array();
+		$posts         = array();
+		$terms         = array();
+		$categories    = array();
+		$objects       = array();
+
+		$archive = new PclZip( $file );
+		$archive_files = $archive->extract( PCLZIP_OPT_EXTRACT_AS_STRING );
+
+		foreach ( $archive_files as $file ) {
+			if ( $file['folder'] ) {
+				continue;
+			}
+
+			$type = dirname( $file['filename'] );
+			$name = basename( $file['filename'], '.json' );
+			$item = json_decode( $file['content'], true );
+
+			if ( 'site' === $type && 'config' === $name ) {
+				if ( isset( $item['link'])) {
+					$base_url = $item['link'];
+				}
+				continue;
+			}
+
+			$id = intval( $name );
+			if ( 'users' === $type ) {
+				$author = array(
+					'author_id'           => (int) $id,
+					'author_login'        => (string) $item['username'],
+					'author_display_name' => (string) $item['display_name'],
+					'author_email'        => (string) $item['email'],
+				);
+
+				$authors[] = $author;
+				continue;
+			}
+
+			if ( 'posts' === $type ) {
+				$post = array(
+					'post_id'        => (int) $id,
+					'post_title'     => (string) $item['title'],
+					'post_content'   => (string) $item['content'],
+					'post_type'      => (string) $item['type'],
+					'guid'           => (string) $item['guid'],
+					'status'         => (string) $item['status'],
+					'post_parent'    => (string) $item['parent'],
+					'post_name'      => (string) $item['slug'],
+					'post_excerpt'   => (string) $item['excerpt'],
+					'post_status'    => (string) $item['status'],
+					'post_date'      => (string) $item['date_utc'],
+					'post_date_gmt'  => (string) $item['date_utc'],
+					'post_author'    => (string) $item['author'],
+					'post_password'  => (string) $item['password'],
+					'comment_status' => (string) $item['comment_status'],
+					'ping_status'    => (string) $item['ping_status'],
+					'menu_order'     => (string) $item['menu_order'],
+					'attachment_url' => (string) $item['attachment_url'],
+					'postmeta'       => (string) $item['postmeta'],
+				);
+
+				$posts[] = $post;
+				continue;
+			}
+
+			if ( 'terms' === $type ) {
+				$term = array(
+					'term_id'          => (int) $id,
+					'term_taxonomy'    => (string) $item['taxonomy'],
+					'slug'             => (string) $item['slug'],
+					'term_parent'      => (string) $item['parent'],
+					'term_name'        => (string) $item['name'],
+					'term_description' => (string) $item['description'],
+				);
+
+				$terms[] = $term;
+				continue;
+			}
+
+			if ( 'categories' === $type ) {
+				$category = array(
+					'term_id'              => (int) $id,
+					'category_nicename'    => (string) $item['name'],
+					'category_parent'      => (string) $item['parent'],
+					'cat_name'             => (string) $item['slug'],
+					'category_description' => (string) $item['description'],
+				);
+
+				$categories[] = $category;
+				continue;
+			}
+
+			if ( 'objects' === $type ) {
+				$object = array(
+					'object_id' => (int) $id,
+					'type'      => (string) $item['type'],
+					'data'      => $item['data'],
+				);
+
+				$objects[] = $object;
+				continue;
+			}
+		}
+
+		return array(
+			'authors'       => $authors,
+			'posts'         => $posts,
+			'categories'    => $categories,
+			'terms'         => $terms,
+			'base_url'      => $base_url,
+			'base_blog_url' => $base_blog_url,
+		);
+	}
+}
diff --git a/src/wordpress-importer.php b/src/wordpress-importer.php
index 76af562..76695de 100644
--- a/src/wordpress-importer.php
+++ b/src/wordpress-importer.php
@@ -48,6 +48,9 @@
 /** WXR_Parser_Regex class */
 require_once dirname( __FILE__ ) . '/parsers/class-wxr-parser-regex.php';
 
+/** WXZ_Parser class */
+require_once dirname( __FILE__ ) . '/parsers/class-wxz-parser.php';
+
 /** WP_Import class */
 require_once dirname( __FILE__ ) . '/class-wp-import.php';
 

From 545442290456e4acb987ff67fe34d8f5a9770ce6 Mon Sep 17 00:00:00 2001
From: Alex Kirk <akirk@users.noreply.github.com>
Date: Tue, 29 Jun 2021 11:48:31 +0200
Subject: [PATCH 2/2] Add mimetype check

---
 src/parsers/class-wxz-parser.php | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/src/parsers/class-wxz-parser.php b/src/parsers/class-wxz-parser.php
index 1120e12..b816826 100644
--- a/src/parsers/class-wxz-parser.php
+++ b/src/parsers/class-wxz-parser.php
@@ -15,6 +15,20 @@ function parse( $file ) {
 		$archive = new PclZip( $file );
 		$archive_files = $archive->extract( PCLZIP_OPT_EXTRACT_AS_STRING );
 
+		$mimetype_exists = false;
+		foreach ( $archive_files as $file ) {
+			if ( 'mimetype' === $file['filename'] ) {
+				if ( 'application/vnd.wordpress.export+zip' === trim( $file['content'] ) ) {
+					$mimetype_exists = true;
+				}
+				break;
+			}
+		}
+
+		if ( ! $mimetype_exists ) {
+			return new WP_Error( 'invalid-file', 'Invalid WXZ fiel, mimetype declaration missing.' );
+		}
+
 		foreach ( $archive_files as $file ) {
 			if ( $file['folder'] ) {
 				continue;